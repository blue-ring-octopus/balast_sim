<?xml version="1.0"?>
<robot name="turtlebot3_waffle_pi_sim" xmlns:xacro="http://ros.org/wiki/xacro">
  <xacro:arg name="laser_visual"  default="false"/>
  <xacro:arg name="camera_visual" default="false"/>
  <xacro:arg name="imu_visual"    default="false"/>

  <gazebo reference="base_link">
    <material>Gazebo/Indigo</material>
  </gazebo>

  <gazebo reference="wheel_left_link">
    <mu1>50000</mu1>
    <mu2>50000</mu2>
    <kp>500000.0</kp>
    <kd>10.0</kd>
    <minDepth>0.001</minDepth>
    <maxVel>0.1</maxVel>
    <fdir1>1 0 0</fdir1>
    <material>Gazebo/FlatBlack</material>
  </gazebo>

  <gazebo reference="wheel_right_link">
    <mu1>50000</mu1>
    <mu2>50000</mu2>
    <kp>500000.0</kp>
    <kd>10.0</kd>
    <minDepth>0.001</minDepth>
    <maxVel>0.1</maxVel>
    <fdir1>1 0 0</fdir1>
    <material>Gazebo/FlatBlack</material>
  </gazebo>

  <gazebo reference="wheel_left_back_link">
    <mu1>50000</mu1>
    <mu2>50000</mu2>
    <kp>500000.0</kp>
    <kd>10.0</kd>
    <minDepth>0.001</minDepth>
    <maxVel>1.0</maxVel>
    <fdir1>1 0 0</fdir1>
    <material>Gazebo/FlatBlack</material>
  </gazebo>

  <gazebo reference="wheel_right_back_link">
    <mu1>50000</mu1>
    <mu2>50000</mu2>
    <kp>500000.0</kp>
    <kd>10.0</kd>
    <minDepth>0.001</minDepth>
    <maxVel>1.0</maxVel>
    <fdir1>1 0 0</fdir1>
    <material>Gazebo/FlatBlack</material>
  </gazebo>
  <gazebo reference="caster_back_right_link">
    <mu1>0.1</mu1>
    <mu2>0.1</mu2>
    <kp>1000000.0</kp>    
    <kd>100.0</kd>
    <minDepth>0.001</minDepth>
    <maxVel>1.0</maxVel>
    <material>Gazebo/FlatBlack</material>
  </gazebo>

  <gazebo reference="caster_back_left_link">
    <mu1>0.1</mu1>
    <mu2>0.1</mu2>
    <kp>1000000.0</kp>
    <kd>100.0</kd>
    <minDepth>0.001</minDepth>
    <maxVel>1.0</maxVel>
    <material>Gazebo/FlatBlack</material>
  </gazebo>

  <gazebo reference="imu_link">
    <sensor type="imu" name="imu">
      <always_on>true</always_on>
      <visualize>$(arg imu_visual)</visualize>
    </sensor>
    <material>Gazebo/Grey</material>
  </gazebo>

  <gazebo>
    <plugin name="turtlebot3_waffle_pi_controller" filename="libgazebo_ros_diff_drive.so">
      <commandTopic>cmd_vel</commandTopic>
      <odometryTopic>base_controller/odom</odometryTopic>
      <odometryFrame>odom</odometryFrame>
      <odometrySource>world</odometrySource>

      

       <publishOdomTF>true</publishOdomTF>
       <publishTf>true</publishTf> 
    <!--   <publishOdomTF>false</publishOdomTF>
       <publishTf>false</publishTf> -->

      <robotBaseFrame>base_footprint</robotBaseFrame>
      <publishWheelTF>true</publishWheelTF>
      <publishWheelJointState>true</publishWheelJointState>
      <legacyMode>false</legacyMode>
      <updateRate>30</updateRate>
      <leftJoint>wheel_left_joint</leftJoint>
      <rightJoint>wheel_right_joint</rightJoint>
      <wheelSeparation>0.287</wheelSeparation>
      <wheelDiameter>0.126</wheelDiameter>
      <wheelAcceleration>1.5</wheelAcceleration>
      <wheelTorque>500</wheelTorque>
      <rosDebugLevel>na</rosDebugLevel>
    </plugin>
  </gazebo>

  <gazebo>
    <plugin name="imu_plugin" filename="libgazebo_ros_imu.so">
      <alwaysOn>true</alwaysOn>
      <bodyName>imu_link</bodyName>
      <frameName>imu_link</frameName>
      <topicName>imu</topicName>
      <serviceName>imu_service</serviceName>
      <gaussianNoise>0.0</gaussianNoise>
      <updateRate>200</updateRate>
      <imu>
        <noise>
          <type>gaussian</type>
          <rate>
            <mean>0.0</mean>
            <stddev>2e-4</stddev>
            <bias_mean>0</bias_mean>
            <bias_stddev>0.0000008</bias_stddev>
          </rate>
          <accel>
            <mean>0.0</mean>
            <stddev>1.7e-2</stddev>
            <bias_mean>0.0</bias_mean>
            <bias_stddev>0.001</bias_stddev>
          </accel>
        </noise>
      </imu>
    </plugin>
  </gazebo>

  <gazebo reference="base_scan">
    <material>Gazebo/FlatBlack</material>
    <sensor type="ray" name="lds_lfcd_sensor">
      <pose>0 0 0 0 0 0</pose>
      <visualize>$(arg laser_visual)</visualize>
      <update_rate>5</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>360</samples>
            <resolution>2</resolution>
            <min_angle>0.0</min_angle>
            <max_angle>6.28319</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.120</min>
          <max>3.5</max>
          <resolution>0.015</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin name="gazebo_ros_lds_lfcd_controller" filename="libgazebo_ros_laser.so">
        <topicName>scan</topicName>
        <frameName>base_scan</frameName>
      </plugin>
    </sensor>
  </gazebo>


<!-- ___________________________________________ STEREO CAMERAS ______________________________________________-->
<!--
  <gazebo reference="camera_link">
    <sensor type="multicamera" name="stereo_camera">
      <always_on>true</always_on>
      <visualize>$(arg camera_visual)</visualize>
      <camera name="left">
	<pose>0 0.0125 0 0 0 0</pose>
	<horizontal_fov>1.211259</horizontal_fov>
          <image>
              <width>1920</width>
              <height>1080</height>
              <format>R8G8B8</format>
          </image>
          <clip>
              <near>0.03</near>
              <far>100</far>
          </clip>
      </camera>

      <camera name="right">
	<pose>0 -0.0125 0 0 0 0</pose>
          <horizontal_fov>1.211259</horizontal_fov>
          <image>
              <width>1920</width>
              <height>1080</height>
              <format>R8G8B8</format>
          </image>
          <clip>
              <near>0.03</near>
              <far>100</far>
          </clip>
      </camera>

      <plugin name="stereo_camera_controller" filename="libgazebo_ros_multicamera.so">
        <alwaysOn>true</alwaysOn>
        <updateRate>30.0</updateRate>
        <cameraName>stereo_camera</cameraName>
        <frameName>camera_rgb_optical_frame</frameName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <hackBaseline>0.025</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
        <baseline>0.025</baseline>
      </plugin>
    </sensor>
  </gazebo>
-->
<!-- ___________________ RGBD CAMERA ___________________________-->
  <gazebo reference="camera_link">
    <sensor type="depth" name="Camera">

      <always_on>true</always_on>
      <visualize>$(arg camera_visual)</visualize>
      <camera>
          <horizontal_fov>1.211259</horizontal_fov>
          <image>
               <width>1920</width>
              <height>1080</height>
              <format>R8G8B8</format>
          </image>
          <clip>
              <near>0.002</near>
              <far>100</far>
          </clip>
      </camera>
	<plugin name="camera_plugin" filename="libgazebo_ros_openni_kinect.so">
            <baseline>0.012</baseline>
            <alwaysOn>true</alwaysOn>
            <updateRate>0.0</updateRate>
            <cameraName>camera_ir</cameraName>
            <imageTopicName>/camera/rgb/image_rect_color</imageTopicName>
            <cameraInfoTopicName>/camera/rgb/camera_info</cameraInfoTopicName>
            <depthImageTopicName>/camera/depth_registered/image_raw</depthImageTopicName>
            <depthImageCameraInfoTopicName>/camera/depth_registered/camera_info</depthImageCameraInfoTopicName>
            <pointCloudTopicName>/camera/depth_points</pointCloudTopicName>
            <frameName>camera_rgb_optical_frame</frameName>
            <pointCloudCutoff>0.0</pointCloudCutoff>
            <pointCloudCutoffMax>3.0</pointCloudCutoffMax>
            <distortionK1>0</distortionK1>
            <distortionK2>0</distortionK2>
            <distortionK3>0</distortionK3>
            <distortionT1>0</distortionT1>
            <distortionT2>0</distortionT2>
            <CxPrime>0</CxPrime>
            <Cx>0</Cx>
            <Cy>0</Cy>
            <focalLength>0</focalLength>
            <hackBaseline>0</hackBaseline>
	   
        </plugin>
    </sensor>
  </gazebo> 
<!-- _________________________________ FLASH LIGHT _______________________________ -->
<gazebo reference="camera_link">  
  <light type="spot" name="front_spot">
    <cast_shadows>1</cast_shadows>
    <pose>-0.1 0 0 0 0.157 0</pose>
    <diffuse>0.02 0.02 0.02 1</diffuse>
    <attenuation>
      <range>5</range>
      <constant>0.02</constant>
      <linear>0.01</linear>
    </attenuation>
    <spot>
        <inner_angle>0.5</inner_angle>
        <outer_angle>1.0</outer_angle>
        <falloff>0.8</falloff>
    </spot>
    <direction>1 0 0</direction>
  </light>
</gazebo>
<!--
<gazebo reference="camera_link2">  
  <light type="spot" name="up_spot">
    <cast_shadows>1</cast_shadows>
    <pose>0.1 0 0 0 -1.57 0</pose>
    <diffuse>0.5 0.5 0.5 1</diffuse>
    <attenuation>
      <range>10</range>
      <constant>0.2</constant>
      <linear>0.01</linear>
    </attenuation>
    <spot>
        <inner_angle>0.9</inner_angle>
        <outer_angle>1.5</outer_angle>
        <falloff>0.8</falloff>
    </spot>
    <direction>1 0 0</direction>
  </light>
</gazebo>-->
</robot>
